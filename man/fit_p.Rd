% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/II_core_fit_p.R
\name{fit_p}
\alias{fit_p}
\title{fit_p}
\usage{
fit_p(
  data,
  obj_func,
  initial,
  lower,
  upper,
  algorithm,
  iteration = 10,
  seed = 123
)
}
\arguments{
\item{data}{A data frame containing the raw data. 
This data should include the following mandatory columns: 
- "sub", "time_line", "L_choice", "R_choice", "choose", "L_reward", "R_reward". 
The following arguments allow you to customize the column names used for processing}

\item{obj_func}{object function, be sure that you write 'binaryRL_res <<- res'}

\item{initial}{initial value for searching parameters, only needed in stats}

\item{lower}{lower bounds of parameters}

\item{upper}{upper bounds of parameters}

\item{algorithm}{Choose a algorithm pacakge from `L-BFGS-B`, `GA`, `GenSA`, `DEoptim`}

\item{iteration}{iteration}

\item{seed}{A numeric value to set the random seed. 
This ensures that the results are reproducible and remain the same each time the function is run.
Provide the value as a number. 
default: `seed = 123`}
}
\value{
binaryRL_res with optimal parameters
}
\description{
This function optimizes free parameters of reinforcement learning 
models built with the `run_m` function. After constructing a 
reinforcement learning model (a function with only ONE argument, 
`params`), the `fit_p` function searches for the optimal values of 
these free parameters.

The package provides four optimization algorithms:

* L-BFGS-B (`stats::optim`)
* Simulated Annealing (`GenSA::GenSA`)
* Genetic Algorithm (`GA::ga`)
* Differential Evolution (`DEoptim::DEoptim`)

We recommend Differential Evolution (`DEoptim::DEoptim`) for its speed.

For more information, please refer to the GitHub repository:
https://github.com/yuki-961004/binaryRL
}
