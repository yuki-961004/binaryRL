% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IV_core_recovery_d.R
\name{recovery_d}
\alias{recovery_d}
\title{recovery_d}
\usage{
recovery_d(
  list,
  obj_func,
  model_name,
  initial,
  lower,
  upper,
  algorithm,
  iteration = 10,
  seed = 123
)
}
\arguments{
\item{list}{[list] a list generated by function `simulate_l`}

\item{obj_func}{[function] a function with only ONE argument `params`. 
Additionally, it is important to note that the data needs to be retrieved 
from parent.frame() and the results passed back to parent.frame(). 
This function returns the log likelihood (logL).}

\item{model_name}{the name of your modal}

\item{initial}{[vector] Initial values for the free parameters. 
These need to be set only when using L-BFGS-B. Other algorithms 
automatically generate initial values.}

\item{lower}{[vector] lower bounds of free parameters}

\item{upper}{[vector] upper bounds of free parameters}

\item{algorithm}{[character] Choose a algorithm package from 
`L-BFGS-B`, `GA`, `GenSA`, `DEoptim`}

\item{iteration}{[integer] the number of iteration}

\item{seed}{[integer] random seed. This ensures that the results are 
reproducible and remain the same each time the function is run. 
default: `seed = 123`}
}
\value{
a data frame for parameter recovery and model recovery
}
\description{
This function applies `fit_p` to each fake dataset in the list generated 
by `simulate_l`. The results can be used for parameter recovery and 
model recovery, helping evaluate the consistency and validity of the 
reinforcement learning model.

For more information, please refer to the GitHub repository:
https://github.com/yuki-961004/binaryRL
}
